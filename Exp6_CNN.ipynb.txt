{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "fIP-PQ6P4GVr"
      },
      "outputs": [],
      "source": [
        "#load packages and modules\n",
        "import keras\n",
        "from keras.datasets import mnist\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from tensorflow.keras.optimizers import SGD\n",
        "from matplotlib import pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X5ybktYm4smK",
        "outputId": "4423f46d-6646-4032-92dd-9f9ad4e9e880"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "11493376/11490434 [==============================] - 0s 0us/step\n",
            "11501568/11490434 [==============================] - 0s 0us/step\n"
          ]
        }
      ],
      "source": [
        "#load data\n",
        "(X_train,Y_train),(X_valid,Y_valid) = mnist.load_data()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dpYXJp0y5WQ-"
      },
      "outputs": [],
      "source": [
        "#preprocessing the data\n",
        "X_train =X_train .reshape(60000,784).astype('float32')\n",
        "X_valid =X_valid .reshape(10000,784).astype('float32')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Q4nKbe4G6xqK"
      },
      "outputs": [],
      "source": [
        "#normalization\n",
        "X_train /=255\n",
        "X_valid /=255"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u2bhqHVI7pn7",
        "outputId": "84a218bf-ec1a-42b7-f441-2ed06ef73332"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.32941177, 0.7254902 , 0.62352943,\n",
              "       0.5921569 , 0.23529412, 0.14117648, 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.87058824, 0.99607843, 0.99607843, 0.99607843, 0.99607843,\n",
              "       0.94509804, 0.7764706 , 0.7764706 , 0.7764706 , 0.7764706 ,\n",
              "       0.7764706 , 0.7764706 , 0.7764706 , 0.7764706 , 0.6666667 ,\n",
              "       0.20392157, 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.2627451 , 0.44705883,\n",
              "       0.28235295, 0.44705883, 0.6392157 , 0.8901961 , 0.99607843,\n",
              "       0.88235295, 0.99607843, 0.99607843, 0.99607843, 0.98039216,\n",
              "       0.8980392 , 0.99607843, 0.99607843, 0.54901963, 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.06666667, 0.25882354, 0.05490196, 0.2627451 ,\n",
              "       0.2627451 , 0.2627451 , 0.23137255, 0.08235294, 0.9254902 ,\n",
              "       0.99607843, 0.41568628, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.3254902 , 0.99215686, 0.81960785, 0.07058824,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.08627451, 0.9137255 ,\n",
              "       1.        , 0.3254902 , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.5058824 , 0.99607843, 0.93333334, 0.17254902,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.23137255, 0.9764706 ,\n",
              "       0.99607843, 0.24313726, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.52156866, 0.99607843, 0.73333335, 0.01960784,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.03529412, 0.8039216 ,\n",
              "       0.972549  , 0.22745098, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.49411765, 0.99607843, 0.7137255 , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.29411766, 0.9843137 ,\n",
              "       0.9411765 , 0.22352941, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.07450981, 0.8666667 , 0.99607843, 0.6509804 , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.01176471, 0.79607844, 0.99607843,\n",
              "       0.85882354, 0.13725491, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.14901961, 0.99607843, 0.99607843, 0.3019608 , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.12156863, 0.8784314 , 0.99607843,\n",
              "       0.4509804 , 0.00392157, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.52156866, 0.99607843, 0.99607843, 0.20392157, 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.23921569, 0.9490196 , 0.99607843,\n",
              "       0.99607843, 0.20392157, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.4745098 , 0.99607843, 0.99607843, 0.85882354, 0.15686275,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.4745098 , 0.99607843,\n",
              "       0.8117647 , 0.07058824, 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        ], dtype=float32)"
            ]
          },
          "execution_count": 17,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "X_valid[0]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mrqxCmv869hk"
      },
      "outputs": [],
      "source": [
        "#convert the labels to one hot representation.\n",
        "from keras import utils as np_utils\n",
        "n_classes=10\n",
        "Y_train=keras.utils.np_utils.to_categorical(Y_train,n_classes)\n",
        "Y_valid=keras.utils.np_utils.to_categorical(Y_valid,n_classes)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v29GuNsh7my-",
        "outputId": "8a3c4be8-27a3-4c95-e825-3849cebcdfdf"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([0., 0., 0., 0., 0., 0., 0., 1., 0., 0.], dtype=float32)"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "Y_valid[0]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JoUGssjR7whX"
      },
      "outputs": [],
      "source": [
        "#Defining the model\n",
        "model=Sequential()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HMgBDIn_7-BN"
      },
      "outputs": [],
      "source": [
        "#Adding dense layer\n",
        "model.add(Dense(64,activation='sigmoid',input_shape=(784,)))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ad1nUITa8Qw1"
      },
      "outputs": [],
      "source": [
        "#Adding the final layer\n",
        "model.add(Dense(10,activation='softmax'))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LjtQIgRl8ed3",
        "outputId": "ccc41b36-636d-41f2-e340-e85253be70e5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense (Dense)               (None, 64)                50240     \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 10)                650       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 50,890\n",
            "Trainable params: 50,890\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "model.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vb8pK8Nh9cW0"
      },
      "outputs": [],
      "source": [
        "#compile the network\n",
        "model.compile(loss='mean_squared_error',optimizer=SGD(learning_rate=0.01),metrics=['accuracy'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AgQnYyYM94j7",
        "outputId": "eb6c7a12-59fb-4717-cad3-596f936fcb06"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/150\n",
            "469/469 [==============================] - 2s 3ms/step - loss: 0.0926 - accuracy: 0.1190\n",
            "Epoch 2/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0914 - accuracy: 0.1322\n",
            "Epoch 3/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0906 - accuracy: 0.1474\n",
            "Epoch 4/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0901 - accuracy: 0.1656\n",
            "Epoch 5/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0896 - accuracy: 0.1898\n",
            "Epoch 6/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0892 - accuracy: 0.2166\n",
            "Epoch 7/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0889 - accuracy: 0.2394\n",
            "Epoch 8/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0885 - accuracy: 0.2605\n",
            "Epoch 9/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0882 - accuracy: 0.2782\n",
            "Epoch 10/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0879 - accuracy: 0.2926\n",
            "Epoch 11/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0876 - accuracy: 0.3069\n",
            "Epoch 12/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0872 - accuracy: 0.3165\n",
            "Epoch 13/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0869 - accuracy: 0.3272\n",
            "Epoch 14/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0866 - accuracy: 0.3371\n",
            "Epoch 15/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0863 - accuracy: 0.3428\n",
            "Epoch 16/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0859 - accuracy: 0.3525\n",
            "Epoch 17/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0856 - accuracy: 0.3594\n",
            "Epoch 18/150\n",
            "469/469 [==============================] - 1s 3ms/step - loss: 0.0852 - accuracy: 0.3690\n",
            "Epoch 19/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0849 - accuracy: 0.3806\n",
            "Epoch 20/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0845 - accuracy: 0.3979\n",
            "Epoch 21/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0842 - accuracy: 0.4157\n",
            "Epoch 22/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0838 - accuracy: 0.4402\n",
            "Epoch 23/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0834 - accuracy: 0.4586\n",
            "Epoch 24/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0830 - accuracy: 0.4770\n",
            "Epoch 25/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0826 - accuracy: 0.4940\n",
            "Epoch 26/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0822 - accuracy: 0.5030\n",
            "Epoch 27/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0818 - accuracy: 0.5118\n",
            "Epoch 28/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0814 - accuracy: 0.5199\n",
            "Epoch 29/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0810 - accuracy: 0.5247\n",
            "Epoch 30/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0806 - accuracy: 0.5293\n",
            "Epoch 31/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0801 - accuracy: 0.5325\n",
            "Epoch 32/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0797 - accuracy: 0.5365\n",
            "Epoch 33/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0792 - accuracy: 0.5387\n",
            "Epoch 34/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0788 - accuracy: 0.5418\n",
            "Epoch 35/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0783 - accuracy: 0.5446\n",
            "Epoch 36/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0779 - accuracy: 0.5481\n",
            "Epoch 37/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0774 - accuracy: 0.5476\n",
            "Epoch 38/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0769 - accuracy: 0.5527\n",
            "Epoch 39/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0764 - accuracy: 0.5554\n",
            "Epoch 40/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0759 - accuracy: 0.5586\n",
            "Epoch 41/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0754 - accuracy: 0.5617\n",
            "Epoch 42/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0749 - accuracy: 0.5641\n",
            "Epoch 43/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0744 - accuracy: 0.5664\n",
            "Epoch 44/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0739 - accuracy: 0.5701\n",
            "Epoch 45/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0734 - accuracy: 0.5730\n",
            "Epoch 46/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0729 - accuracy: 0.5756\n",
            "Epoch 47/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0724 - accuracy: 0.5784\n",
            "Epoch 48/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0719 - accuracy: 0.5826\n",
            "Epoch 49/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0713 - accuracy: 0.5858\n",
            "Epoch 50/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0708 - accuracy: 0.5905\n",
            "Epoch 51/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0703 - accuracy: 0.5929\n",
            "Epoch 52/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0697 - accuracy: 0.5964\n",
            "Epoch 53/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0692 - accuracy: 0.6001\n",
            "Epoch 54/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0687 - accuracy: 0.6033\n",
            "Epoch 55/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0681 - accuracy: 0.6064\n",
            "Epoch 56/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0676 - accuracy: 0.6105\n",
            "Epoch 57/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0671 - accuracy: 0.6144\n",
            "Epoch 58/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0665 - accuracy: 0.6181\n",
            "Epoch 59/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0660 - accuracy: 0.6213\n",
            "Epoch 60/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0655 - accuracy: 0.6249\n",
            "Epoch 61/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0649 - accuracy: 0.6288\n",
            "Epoch 62/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0644 - accuracy: 0.6319\n",
            "Epoch 63/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0639 - accuracy: 0.6351\n",
            "Epoch 64/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0634 - accuracy: 0.6385\n",
            "Epoch 65/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0629 - accuracy: 0.6421\n",
            "Epoch 66/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0623 - accuracy: 0.6455\n",
            "Epoch 67/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0618 - accuracy: 0.6490\n",
            "Epoch 68/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0613 - accuracy: 0.6515\n",
            "Epoch 69/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0608 - accuracy: 0.6541\n",
            "Epoch 70/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0603 - accuracy: 0.6572\n",
            "Epoch 71/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0598 - accuracy: 0.6599\n",
            "Epoch 72/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0594 - accuracy: 0.6631\n",
            "Epoch 73/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0589 - accuracy: 0.6660\n",
            "Epoch 74/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0584 - accuracy: 0.6688\n",
            "Epoch 75/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0579 - accuracy: 0.6716\n",
            "Epoch 76/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0575 - accuracy: 0.6743\n",
            "Epoch 77/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0570 - accuracy: 0.6771\n",
            "Epoch 78/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0565 - accuracy: 0.6794\n",
            "Epoch 79/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0561 - accuracy: 0.6827\n",
            "Epoch 80/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0556 - accuracy: 0.6852\n",
            "Epoch 81/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0552 - accuracy: 0.6878\n",
            "Epoch 82/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0548 - accuracy: 0.6913\n",
            "Epoch 83/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0543 - accuracy: 0.6935\n",
            "Epoch 84/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0539 - accuracy: 0.6967\n",
            "Epoch 85/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0535 - accuracy: 0.6988\n",
            "Epoch 86/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0531 - accuracy: 0.7022\n",
            "Epoch 87/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0527 - accuracy: 0.7048\n",
            "Epoch 88/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0523 - accuracy: 0.7076\n",
            "Epoch 89/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0519 - accuracy: 0.7100\n",
            "Epoch 90/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0515 - accuracy: 0.7132\n",
            "Epoch 91/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0511 - accuracy: 0.7162\n",
            "Epoch 92/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0507 - accuracy: 0.7194\n",
            "Epoch 93/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0504 - accuracy: 0.7223\n",
            "Epoch 94/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0500 - accuracy: 0.7246\n",
            "Epoch 95/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0496 - accuracy: 0.7272\n",
            "Epoch 96/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0493 - accuracy: 0.7297\n",
            "Epoch 97/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0489 - accuracy: 0.7330\n",
            "Epoch 98/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0486 - accuracy: 0.7355\n",
            "Epoch 99/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0482 - accuracy: 0.7375\n",
            "Epoch 100/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0479 - accuracy: 0.7400\n",
            "Epoch 101/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0475 - accuracy: 0.7422\n",
            "Epoch 102/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0472 - accuracy: 0.7440\n",
            "Epoch 103/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0469 - accuracy: 0.7456\n",
            "Epoch 104/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0466 - accuracy: 0.7475\n",
            "Epoch 105/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0462 - accuracy: 0.7494\n",
            "Epoch 106/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0459 - accuracy: 0.7513\n",
            "Epoch 107/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0456 - accuracy: 0.7529\n",
            "Epoch 108/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0453 - accuracy: 0.7549\n",
            "Epoch 109/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0450 - accuracy: 0.7566\n",
            "Epoch 110/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0447 - accuracy: 0.7577\n",
            "Epoch 111/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0444 - accuracy: 0.7593\n",
            "Epoch 112/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0441 - accuracy: 0.7611\n",
            "Epoch 113/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0439 - accuracy: 0.7622\n",
            "Epoch 114/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0436 - accuracy: 0.7635\n",
            "Epoch 115/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0433 - accuracy: 0.7651\n",
            "Epoch 116/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0430 - accuracy: 0.7663\n",
            "Epoch 117/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0428 - accuracy: 0.7674\n",
            "Epoch 118/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0425 - accuracy: 0.7683\n",
            "Epoch 119/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0422 - accuracy: 0.7694\n",
            "Epoch 120/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0420 - accuracy: 0.7708\n",
            "Epoch 121/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0417 - accuracy: 0.7721\n",
            "Epoch 122/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0415 - accuracy: 0.7734\n",
            "Epoch 123/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0412 - accuracy: 0.7749\n",
            "Epoch 124/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0410 - accuracy: 0.7763\n",
            "Epoch 125/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0407 - accuracy: 0.7777\n",
            "Epoch 126/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0405 - accuracy: 0.7796\n",
            "Epoch 127/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0402 - accuracy: 0.7809\n",
            "Epoch 128/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0400 - accuracy: 0.7825\n",
            "Epoch 129/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0398 - accuracy: 0.7839\n",
            "Epoch 130/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0395 - accuracy: 0.7858\n",
            "Epoch 131/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0393 - accuracy: 0.7872\n",
            "Epoch 132/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0391 - accuracy: 0.7890\n",
            "Epoch 133/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0388 - accuracy: 0.7907\n",
            "Epoch 134/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0386 - accuracy: 0.7924\n",
            "Epoch 135/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0384 - accuracy: 0.7941\n",
            "Epoch 136/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0382 - accuracy: 0.7960\n",
            "Epoch 137/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0380 - accuracy: 0.7978\n",
            "Epoch 138/150\n",
            "469/469 [==============================] - 1s 3ms/step - loss: 0.0378 - accuracy: 0.7994\n",
            "Epoch 139/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0376 - accuracy: 0.8011\n",
            "Epoch 140/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0373 - accuracy: 0.8028\n",
            "Epoch 141/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0371 - accuracy: 0.8048\n",
            "Epoch 142/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0369 - accuracy: 0.8069\n",
            "Epoch 143/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0367 - accuracy: 0.8085\n",
            "Epoch 144/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0365 - accuracy: 0.8101\n",
            "Epoch 145/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0363 - accuracy: 0.8116\n",
            "Epoch 146/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0362 - accuracy: 0.8131\n",
            "Epoch 147/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0360 - accuracy: 0.8145\n",
            "Epoch 148/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0358 - accuracy: 0.8159\n",
            "Epoch 149/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0356 - accuracy: 0.8176\n",
            "Epoch 150/150\n",
            "469/469 [==============================] - 1s 2ms/step - loss: 0.0354 - accuracy: 0.8188\n"
          ]
        }
      ],
      "source": [
        "#train\n",
        "history=model.fit(X_train,Y_train,batch_size=128,epochs=150,verbose=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3rlSapyZ4QxG",
        "outputId": "bfc4d84a-c04c-405e-ee86-723f45198559"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Pipeline(steps=[('standardscaler', StandardScaler()),\n",
              "                ('logisticregression', LogisticRegression(random_state=0))])"
            ]
          },
          "execution_count": 19,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "\n",
        "from sklearn.datasets import fetch_openml\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.pipeline import make_pipeline\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "X, Y = fetch_openml(data_id=1464, return_X_y=True)\n",
        "X_train, X_valid, Y_train,Y_valid = train_test_split(X, Y, stratify=Y)\n",
        "\n",
        "clf = make_pipeline(StandardScaler(), LogisticRegression(random_state=0))\n",
        "clf.fit(X_train, Y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "rz2_y_PV4SK0",
        "outputId": "1c0e0030-43ec-4200-b224-e1b47a181dc6"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.metrics import ConfusionMatrixDisplay\n",
        "\n",
        "Y_pred = clf.predict(X_valid)\n",
        "cm = confusion_matrix(Y_valid, Y_pred)\n",
        "\n",
        "cm_display = ConfusionMatrixDisplay(cm).plot()"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "name": "Exp6- CNN.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNZK4nl1uYqbUuxBg29yv0M"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}